# -*- coding: utf-8 -*-


# 数字 1234, 3.1415 3+4j

# 字符串 'spam', b'a\xolc'

# 列表 [1, 2, ['abc']]

# 字典 ['name': 'zs', 'age': 18]

# 元组 ('A', 'B', 'C',1 )

# 文件 myfile=open('xxx.txt', r)  r代表读写权限

# 集合 set('abc') {'a', 'b', 'c'} 由不重复内容组成、而且是无序的

# 其他类型 None 布尔值


不可变:
    数字 字符串 元组
可变:
    列表 集合 字典

# Python中变量不需要提前声明、当一个变量赋值时、就创建了它。

字符串:
    - 任意字符的集合、有序
    >>> S = 'Spam'
    >>> len(S)
    4

    >>> S[0]
    'S'
    >>> S[1]
    'p'
    >>> S[-1]
    'm'
    >>> S[-2]
    'p'
   - 在python中索引是按照最前面的偏移量进行编码的、也就是从0开始:
     第一项为0、第二项为1、以此类推。也能够反向索引.
    >>> S[len(S)-1]
    'm'
   - 负的索引号会简单地与字符串的长度相加

    >>> S
    'Spam'
    >>> S[1:3]
    'pa'
    >>> S[:]
    'Spam'
   - 上述代表分片、表示从索引1开始、边界为3、边界不会显示。

    >>> S
    'Spam'
    >>> S + 'xyz'
    >>> S
    'Spamxyz'
    >>> S * 2
    'SpamSpam'
   - 字符串也支持使用加号合并
   - 注意(+号): 对于数字来说为加法、对于字符串来说为合并。python支持多态、一个操作的意义取决于被操作的对象。

 - 不可变性:
    - 字符串为不可变对象、意思是说不能对原始字符串改变、如S[0]='Z'会报错。可以新生成字符串作为其结果.
    >>> S = 'z' + S[1:] 不会对原始字符串进行改变、而是创建了一个新对象。
    'Zpam'

字符串的常用操作:
    S = 'Spam'

    >>> S.find('pa') 查找字符中的位置
    1
    >>> S.replace('pa', 'XYZ') 字符串替换
    'SXYZm'

    >>> line = 'aaa, bbb, ccc, dd'
    >>> line.split(',') 字符串分割, 以分号作为分割符
    ['aaa', 'bbb', 'ccc', 'dd']

    >>> S = 'spam'
    >>> S.upper() 替换大写
    'SPAM'
    >>> line = 'aaa,bbb,ccc,dd\n'
    >>> line = line.rstrip()
    'aaa,bbb,ccc,dd'

    >>> '%s, eggs, and %s' % ('spam', 'SPAM!')
    'spam, eggs, and SPAM!'
    >>> '{0}, eggs, and {1}'.format('spam','spam!')
    'spam, eggs, and SPAM!'
   - 字符串格式输出



